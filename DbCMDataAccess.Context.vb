'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class eclCatoCMEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=eclCatoCMEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property dtproperties() As DbSet(Of dtproperty)
    Public Overridable Property tblCMColumnOrderDetails() As DbSet(Of tblCMColumnOrderDetail)
    Public Overridable Property tblCMGroupPackageGridHeaders() As DbSet(Of tblCMGroupPackageGridHeader)
    Public Overridable Property tblCMGroupsFormOptionalHeaders() As DbSet(Of tblCMGroupsFormOptionalHeader)
    Public Overridable Property tblCMPackagesFormOptionalHeaders() As DbSet(Of tblCMPackagesFormOptionalHeader)
    Public Overridable Property tblCMProjects() As DbSet(Of tblCMProject)
    Public Overridable Property tblCMSChangeDetails() As DbSet(Of tblCMSChangeDetail)
    Public Overridable Property tblCMSChangeIndexes() As DbSet(Of tblCMSChangeIndex)
    Public Overridable Property tblCMSChangeStatus() As DbSet(Of tblCMSChangeStatu)
    Public Overridable Property tblCMSChangeTypes() As DbSet(Of tblCMSChangeType)
    Public Overridable Property tblCMSContractReportingPeriods() As DbSet(Of tblCMSContractReportingPeriod)
    Public Overridable Property tblCMSContracts() As DbSet(Of tblCMSContract)
    Public Overridable Property tblCMSDisciplines() As DbSet(Of tblCMSDiscipline)
    Public Overridable Property tblCMSGroupPackages() As DbSet(Of tblCMSGroupPackage)
    Public Overridable Property tblCMSGroups() As DbSet(Of tblCMSGroup)
    Public Overridable Property tblCMSPackages() As DbSet(Of tblCMSPackage)
    Public Overridable Property tblCMSProjectReportExclusions() As DbSet(Of tblCMSProjectReportExclusion)
    Public Overridable Property tblCMSProjects() As DbSet(Of tblCMSProject)
    Public Overridable Property tblCMSReportPeriods() As DbSet(Of tblCMSReportPeriod)
    Public Overridable Property tblCMSTrafficLights() As DbSet(Of tblCMSTrafficLight)
    Public Overridable Property tblCMSUserDefineFields() As DbSet(Of tblCMSUserDefineField)
    Public Overridable Property tblCMSValuationGroups() As DbSet(Of tblCMSValuationGroup)
    Public Overridable Property tblCMSValuations() As DbSet(Of tblCMSValuation)
    Public Overridable Property tblPhraseCommentaryDatas() As DbSet(Of tblPhraseCommentaryData)
    Public Overridable Property tblReportGenerics() As DbSet(Of tblReportGeneric)
    Public Overridable Property tblXEvents() As DbSet(Of tblXEvent)
    Public Overridable Property tblCatoCMProjects() As DbSet(Of tblCatoCMProject)
    Public Overridable Property tblProjects() As DbSet(Of tblProject)
    Public Overridable Property tblAddresses() As DbSet(Of tblAddress)
    Public Overridable Property tblDefaultCMProperties() As DbSet(Of tblDefaultCMProperty)
    Public Overridable Property tblProjectImages() As DbSet(Of tblProjectImage)
    Public Overridable Property tblUsers() As DbSet(Of tblUser)

    Public Overridable Function dt_addtosourcecontrol(vchSourceSafeINI As String, vchProjectName As String, vchComment As String, vchLoginName As String, vchPassword As String) As Integer
        Dim vchSourceSafeINIParameter As ObjectParameter = If(vchSourceSafeINI IsNot Nothing, New ObjectParameter("vchSourceSafeINI", vchSourceSafeINI), New ObjectParameter("vchSourceSafeINI", GetType(String)))

        Dim vchProjectNameParameter As ObjectParameter = If(vchProjectName IsNot Nothing, New ObjectParameter("vchProjectName", vchProjectName), New ObjectParameter("vchProjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter)
    End Function

    Public Overridable Function dt_addtosourcecontrol_u(vchSourceSafeINI As String, vchProjectName As String, vchComment As String, vchLoginName As String, vchPassword As String) As Integer
        Dim vchSourceSafeINIParameter As ObjectParameter = If(vchSourceSafeINI IsNot Nothing, New ObjectParameter("vchSourceSafeINI", vchSourceSafeINI), New ObjectParameter("vchSourceSafeINI", GetType(String)))

        Dim vchProjectNameParameter As ObjectParameter = If(vchProjectName IsNot Nothing, New ObjectParameter("vchProjectName", vchProjectName), New ObjectParameter("vchProjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter)
    End Function

    Public Overridable Function dt_adduserobject() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_adduserobject")
    End Function

    Public Overridable Function dt_adduserobject_vcs(vchProperty As String) As Integer
        Dim vchPropertyParameter As ObjectParameter = If(vchProperty IsNot Nothing, New ObjectParameter("vchProperty", vchProperty), New ObjectParameter("vchProperty", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter)
    End Function

    Public Overridable Function dt_checkinobject(chObjectType As String, vchObjectName As String, vchComment As String, vchLoginName As String, vchPassword As String, iVCSFlags As Nullable(Of Integer), iActionFlag As Nullable(Of Integer), txStream1 As String, txStream2 As String, txStream3 As String) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iVCSFlagsParameter As ObjectParameter = If(iVCSFlags.HasValue, New ObjectParameter("iVCSFlags", iVCSFlags), New ObjectParameter("iVCSFlags", GetType(Integer)))

        Dim iActionFlagParameter As ObjectParameter = If(iActionFlag.HasValue, New ObjectParameter("iActionFlag", iActionFlag), New ObjectParameter("iActionFlag", GetType(Integer)))

        Dim txStream1Parameter As ObjectParameter = If(txStream1 IsNot Nothing, New ObjectParameter("txStream1", txStream1), New ObjectParameter("txStream1", GetType(String)))

        Dim txStream2Parameter As ObjectParameter = If(txStream2 IsNot Nothing, New ObjectParameter("txStream2", txStream2), New ObjectParameter("txStream2", GetType(String)))

        Dim txStream3Parameter As ObjectParameter = If(txStream3 IsNot Nothing, New ObjectParameter("txStream3", txStream3), New ObjectParameter("txStream3", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter)
    End Function

    Public Overridable Function dt_checkinobject_u(chObjectType As String, vchObjectName As String, vchComment As String, vchLoginName As String, vchPassword As String, iVCSFlags As Nullable(Of Integer), iActionFlag As Nullable(Of Integer), txStream1 As String, txStream2 As String, txStream3 As String) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iVCSFlagsParameter As ObjectParameter = If(iVCSFlags.HasValue, New ObjectParameter("iVCSFlags", iVCSFlags), New ObjectParameter("iVCSFlags", GetType(Integer)))

        Dim iActionFlagParameter As ObjectParameter = If(iActionFlag.HasValue, New ObjectParameter("iActionFlag", iActionFlag), New ObjectParameter("iActionFlag", GetType(Integer)))

        Dim txStream1Parameter As ObjectParameter = If(txStream1 IsNot Nothing, New ObjectParameter("txStream1", txStream1), New ObjectParameter("txStream1", GetType(String)))

        Dim txStream2Parameter As ObjectParameter = If(txStream2 IsNot Nothing, New ObjectParameter("txStream2", txStream2), New ObjectParameter("txStream2", GetType(String)))

        Dim txStream3Parameter As ObjectParameter = If(txStream3 IsNot Nothing, New ObjectParameter("txStream3", txStream3), New ObjectParameter("txStream3", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter)
    End Function

    Public Overridable Function dt_checkoutobject(chObjectType As String, vchObjectName As String, vchComment As String, vchLoginName As String, vchPassword As String, iVCSFlags As Nullable(Of Integer), iActionFlag As Nullable(Of Integer)) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iVCSFlagsParameter As ObjectParameter = If(iVCSFlags.HasValue, New ObjectParameter("iVCSFlags", iVCSFlags), New ObjectParameter("iVCSFlags", GetType(Integer)))

        Dim iActionFlagParameter As ObjectParameter = If(iActionFlag.HasValue, New ObjectParameter("iActionFlag", iActionFlag), New ObjectParameter("iActionFlag", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter)
    End Function

    Public Overridable Function dt_checkoutobject_u(chObjectType As String, vchObjectName As String, vchComment As String, vchLoginName As String, vchPassword As String, iVCSFlags As Nullable(Of Integer), iActionFlag As Nullable(Of Integer)) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchCommentParameter As ObjectParameter = If(vchComment IsNot Nothing, New ObjectParameter("vchComment", vchComment), New ObjectParameter("vchComment", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iVCSFlagsParameter As ObjectParameter = If(iVCSFlags.HasValue, New ObjectParameter("iVCSFlags", iVCSFlags), New ObjectParameter("iVCSFlags", GetType(Integer)))

        Dim iActionFlagParameter As ObjectParameter = If(iActionFlag.HasValue, New ObjectParameter("iActionFlag", iActionFlag), New ObjectParameter("iActionFlag", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter)
    End Function

    Public Overridable Function dt_displayoaerror(iObject As Nullable(Of Integer), iresult As Nullable(Of Integer)) As Integer
        Dim iObjectParameter As ObjectParameter = If(iObject.HasValue, New ObjectParameter("iObject", iObject), New ObjectParameter("iObject", GetType(Integer)))

        Dim iresultParameter As ObjectParameter = If(iresult.HasValue, New ObjectParameter("iresult", iresult), New ObjectParameter("iresult", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter)
    End Function

    Public Overridable Function dt_displayoaerror_u(iObject As Nullable(Of Integer), iresult As Nullable(Of Integer)) As Integer
        Dim iObjectParameter As ObjectParameter = If(iObject.HasValue, New ObjectParameter("iObject", iObject), New ObjectParameter("iObject", GetType(Integer)))

        Dim iresultParameter As ObjectParameter = If(iresult.HasValue, New ObjectParameter("iresult", iresult), New ObjectParameter("iresult", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter)
    End Function

    Public Overridable Function dt_droppropertiesbyid(id As Nullable(Of Integer), [property] As String) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter)
    End Function

    Public Overridable Function dt_dropuserobjectbyid(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter)
    End Function

    Public Overridable Function dt_generateansiname(name As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_generateansiname", name)
    End Function

    Public Overridable Function dt_getobjwithprop([property] As String, value As String) As ObjectResult(Of Nullable(Of Integer))
        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Dim valueParameter As ObjectParameter = If(value IsNot Nothing, New ObjectParameter("value", value), New ObjectParameter("value", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("dt_getobjwithprop", propertyParameter, valueParameter)
    End Function

    Public Overridable Function dt_getobjwithprop_u([property] As String, uvalue As String) As ObjectResult(Of Nullable(Of Integer))
        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Dim uvalueParameter As ObjectParameter = If(uvalue IsNot Nothing, New ObjectParameter("uvalue", uvalue), New ObjectParameter("uvalue", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("dt_getobjwithprop_u", propertyParameter, uvalueParameter)
    End Function

    Public Overridable Function dt_getpropertiesbyid(id As Nullable(Of Integer), [property] As String) As ObjectResult(Of dt_getpropertiesbyid_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of dt_getpropertiesbyid_Result)("dt_getpropertiesbyid", idParameter, propertyParameter)
    End Function

    Public Overridable Function dt_getpropertiesbyid_u(id As Nullable(Of Integer), [property] As String) As ObjectResult(Of dt_getpropertiesbyid_u_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of dt_getpropertiesbyid_u_Result)("dt_getpropertiesbyid_u", idParameter, propertyParameter)
    End Function

    Public Overridable Function dt_getpropertiesbyid_vcs(id As Nullable(Of Integer), [property] As String, value As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value)
    End Function

    Public Overridable Function dt_getpropertiesbyid_vcs_u(id As Nullable(Of Integer), [property] As String, value As ObjectParameter) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value)
    End Function

    Public Overridable Function dt_isundersourcecontrol(vchLoginName As String, vchPassword As String, iWhoToo As Nullable(Of Integer)) As Integer
        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iWhoTooParameter As ObjectParameter = If(iWhoToo.HasValue, New ObjectParameter("iWhoToo", iWhoToo), New ObjectParameter("iWhoToo", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter)
    End Function

    Public Overridable Function dt_isundersourcecontrol_u(vchLoginName As String, vchPassword As String, iWhoToo As Nullable(Of Integer)) As Integer
        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Dim iWhoTooParameter As ObjectParameter = If(iWhoToo.HasValue, New ObjectParameter("iWhoToo", iWhoToo), New ObjectParameter("iWhoToo", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter)
    End Function

    Public Overridable Function dt_removefromsourcecontrol() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol")
    End Function

    Public Overridable Function dt_setpropertybyid(id As Nullable(Of Integer), [property] As String, value As String, lvalue As Byte()) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Dim valueParameter As ObjectParameter = If(value IsNot Nothing, New ObjectParameter("value", value), New ObjectParameter("value", GetType(String)))

        Dim lvalueParameter As ObjectParameter = If(lvalue IsNot Nothing, New ObjectParameter("lvalue", lvalue), New ObjectParameter("lvalue", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter)
    End Function

    Public Overridable Function dt_setpropertybyid_u(id As Nullable(Of Integer), [property] As String, uvalue As String, lvalue As Byte()) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim propertyParameter As ObjectParameter = If([property] IsNot Nothing, New ObjectParameter("property", [property]), New ObjectParameter("property", GetType(String)))

        Dim uvalueParameter As ObjectParameter = If(uvalue IsNot Nothing, New ObjectParameter("uvalue", uvalue), New ObjectParameter("uvalue", GetType(String)))

        Dim lvalueParameter As ObjectParameter = If(lvalue IsNot Nothing, New ObjectParameter("lvalue", lvalue), New ObjectParameter("lvalue", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter)
    End Function

    Public Overridable Function dt_validateloginparams(vchLoginName As String, vchPassword As String) As Integer
        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter)
    End Function

    Public Overridable Function dt_validateloginparams_u(vchLoginName As String, vchPassword As String) As Integer
        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter)
    End Function

    Public Overridable Function dt_vcsenabled() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_vcsenabled")
    End Function

    Public Overridable Function dt_verstamp006() As ObjectResult(Of Nullable(Of Integer))
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("dt_verstamp006")
    End Function

    Public Overridable Function dt_verstamp007() As ObjectResult(Of Nullable(Of Integer))
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("dt_verstamp007")
    End Function

    Public Overridable Function dt_whocheckedout(chObjectType As String, vchObjectName As String, vchLoginName As String, vchPassword As String) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter)
    End Function

    Public Overridable Function dt_whocheckedout_u(chObjectType As String, vchObjectName As String, vchLoginName As String, vchPassword As String) As Integer
        Dim chObjectTypeParameter As ObjectParameter = If(chObjectType IsNot Nothing, New ObjectParameter("chObjectType", chObjectType), New ObjectParameter("chObjectType", GetType(String)))

        Dim vchObjectNameParameter As ObjectParameter = If(vchObjectName IsNot Nothing, New ObjectParameter("vchObjectName", vchObjectName), New ObjectParameter("vchObjectName", GetType(String)))

        Dim vchLoginNameParameter As ObjectParameter = If(vchLoginName IsNot Nothing, New ObjectParameter("vchLoginName", vchLoginName), New ObjectParameter("vchLoginName", GetType(String)))

        Dim vchPasswordParameter As ObjectParameter = If(vchPassword IsNot Nothing, New ObjectParameter("vchPassword", vchPassword), New ObjectParameter("vchPassword", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter)
    End Function

End Class
